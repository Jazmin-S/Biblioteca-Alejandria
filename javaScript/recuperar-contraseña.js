const sendEmailBtn = document.getElementById('sendEmailBtn');
const modal = document.getElementById('modalCodigo');
const cerrarModal = document.getElementById('cerrarModal');
const validarCodigoBtn = document.getElementById('validarCodigoBtn');
const codigoInput = document.getElementById('codigoInput');
const formRecuperar = document.getElementById('formRecuperar');

console.log('‚úÖ Script cargado');

// Almacenar c√≥digo temporalmente
let codigoGenerado = '';
let emailUsuario = '';

// Funci√≥n para generar c√≥digo de 6 d√≠gitos
function generarCodigo() {
    return Math.floor(100000 + Math.random() * 900000).toString();
}

// Funci√≥n para mostrar u ocultar el modal
function toggleModal(mostrar) {
    if (mostrar) {
        modal.classList.remove('hidden');
        console.log('üîì Modal mostrado');
    } else {
        modal.classList.add('hidden');
        console.log('üîí Modal ocultado');
    }
}

// Funci√≥n para enviar c√≥digo por email
async function enviarCodigoPorEmail(email, codigo) {
    try {
        console.log('üîÑ Enviando c√≥digo por email...');
        
        const response = await fetch('http://localhost:3000/api/enviar-codigo', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ correo: email, codigo: codigo })
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.message || 'Error al enviar el c√≥digo');
        }

        return data;
    } catch (error) {
        console.error('‚ùå Error enviando email:', error);
        throw error;
    }
}

// Event listener para el formulario
formRecuperar.addEventListener('submit', async function(e) {
    e.preventDefault();
    console.log('üìß Formulario enviado');
    
    const email = document.getElementById('email').value.trim();
    console.log('üì® Email ingresado:', email);
    
    if (!email) {
        alert('‚ùå Ingresa un correo v√°lido.');
        return;
    }
    
    // Validar que sea correo Gmail
    if (!email.endsWith('@gmail.com')) {
        alert('‚ùå Solo se permiten correos de Gmail (@gmail.com)');
        return;
    }

    // Mostrar loading en el bot√≥n
    const originalText = sendEmailBtn.textContent;
    sendEmailBtn.textContent = 'Enviando...';
    sendEmailBtn.disabled = true;

    try {
        console.log('üîÑ Verificando correo en la base de datos...');

        const response = await fetch('http://localhost:3000/api/verificar-correo', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ correo: email })
        });

        console.log('üì• Respuesta recibida. Status:', response.status);
        
        if (!response.ok) {
            throw new Error(`Error HTTP: ${response.status}`);
        }

        const data = await response.json();
        console.log('üìã Datos recibidos del servidor:', data);

        if (!data.existe) {
            alert('‚ùå No existe un usuario registrado con este correo electr√≥nico.');
            return;
        }

        // Generar c√≥digo
        codigoGenerado = generarCodigo();
        emailUsuario = email;
        console.log('üîë C√≥digo generado:', codigoGenerado);

        // Enviar c√≥digo por email
        await enviarCodigoPorEmail(email, codigoGenerado);
        
        alert('‚úÖ C√≥digo de verificaci√≥n enviado a tu correo electr√≥nico. Revisa tu bandeja de entrada.');
        
        // Mostrar modal para ingresar c√≥digo
        toggleModal(true);
        codigoInput.focus();
        
        // Expirar c√≥digo despu√©s de 10 minutos
        setTimeout(() => {
            if (codigoGenerado !== '') {
                codigoGenerado = '';
                alert('‚è∞ El c√≥digo ha expirado. Solicita uno nuevo.');
                toggleModal(false);
                codigoInput.value = '';
            }
        }, 10 * 60 * 1000);

    } catch (error) {
        console.error('‚ùå Error completo:', error);
        alert('‚ö†Ô∏è Error: ' + error.message);
    } finally {
        // Restaurar bot√≥n
        sendEmailBtn.textContent = originalText;
        sendEmailBtn.disabled = false;
    }
});

// Cerrar modal con la X
cerrarModal.addEventListener('click', () => {
    console.log('‚ùå Cerrando modal');
    toggleModal(false);
    codigoInput.value = '';
});

// Validar c√≥digo
validarCodigoBtn.addEventListener('click', () => {
    const codigo = codigoInput.value.trim();
    console.log('üîç Validando c√≥digo:', codigo);
    
    if (codigo.length !== 6) {
        alert('‚ùå El c√≥digo debe tener 6 caracteres.');
        codigoInput.focus();
        return;
    }
    
    if (codigo !== codigoGenerado) {
        alert('‚ùå C√≥digo incorrecto. Verifica el c√≥digo.');
        codigoInput.value = '';
        codigoInput.focus();
        return;
    }
    
    alert('‚úÖ C√≥digo validado correctamente. Ahora puedes crear una nueva contrase√±a.');
    toggleModal(false);
    codigoInput.value = '';
    codigoGenerado = '';
    
    // Redirigir a p√°gina de nueva contrase√±a
    window.location.href = './nueva-contrase√±a.html?email=' + encodeURIComponent(emailUsuario);
});

// Permitir validar con Enter
codigoInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        validarCodigoBtn.click();
    }
});

// Cerrar modal haciendo clic fuera
modal.addEventListener('click', function(e) {
    if (e.target === modal) {
        toggleModal(false);
        codigoInput.value = '';
    }
});

console.log('üéØ Event listeners configurados');